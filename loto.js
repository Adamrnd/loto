        document.addEventListener('DOMContentLoaded', function() {
            const userNumbersInput = document.getElementById('userNumbers');
            const startBtn = document.getElementById('startBtn');
            const drawBtn = document.getElementById('drawBtn');
            const userBallsContainer = document.getElementById('userBalls');
            const drawnBallsContainer = document.getElementById('drawnBalls');
            const resultDiv = document.getElementById('result');
            const matchedCountSpan = document.getElementById('matchedCount');
            const prizeDiv = document.getElementById('prize');
            
            let userNumbers = [];
            let drawnNumbers = [];
            
            // –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã - –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —á–∏—Å–µ–ª
            startBtn.addEventListener('click', function() {
                const input = userNumbersInput.value.trim();
                const numbers = input.split(',').map(num => parseInt(num.trim()));
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
                if (numbers.length !== 5 || numbers.some(isNaN) || 
                    numbers.some(num => num < 1 || num > 25) ||
                    new Set(numbers).size !== numbers.length) {
                    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 25, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—è—Ç—ã–º–∏');
                    return;
                }
                
                userNumbers = numbers.sort((a, b) => a - b);
                renderUserBalls();
                startBtn.disabled = true;
                drawBtn.disabled = false;
                resultDiv.style.display = 'none';
            });
            
            // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —à–∞—Ä–æ–≤
            function renderUserBalls() {
                userBallsContainer.innerHTML = '';
                userNumbers.forEach(num => {
                    const ball = document.createElement('div');
                    ball.className = 'ball';
                    ball.textContent = num;
                    userBallsContainer.appendChild(ball);
                });
            }
            
            // –†–æ–∑—ã–≥—Ä—ã—à —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
            drawBtn.addEventListener('click', function() {
                drawBtn.disabled = true;
                drawnNumbers = [];
                drawnBallsContainer.innerHTML = '';
                resultDiv.style.display = 'none';
                
                // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è 5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
                const allNumbers = Array.from({length: 25}, (_, i) => i + 1);
                for (let i = 0; i < 5; i++) {
                    const randomIndex = Math.floor(Math.random() * allNumbers.length);
                    drawnNumbers.push(allNumbers[randomIndex]);
                    allNumbers.splice(randomIndex, 1);
                }
                drawnNumbers.sort((a, b) => a - b);
                
                // –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã–ø–∞–¥–µ–Ω–∏—è —à–∞—Ä–æ–≤
                animateDraw();
            });
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã–ø–∞–¥–µ–Ω–∏—è —à–∞—Ä–æ–≤
            function animateDraw() {
                let delay = 0;
                drawnNumbers.forEach((num, index) => {
                    setTimeout(() => {
                        const ball = document.createElement('div');
                        ball.className = 'ball draw-animation';
                        ball.textContent = num;
                        drawnBallsContainer.appendChild(ball);
                        
                        // –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—Å–µ—Ö —à–∞—Ä–æ–≤ - –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                        if (index === drawnNumbers.length - 1) {
                            setTimeout(calculateResults, 1000);
                        }
                    }, delay);
                    delay += 800; // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —à–∞—Ä–∞–º–∏
                });
            }
            
            // –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –ø—Ä–∏–∑–æ–≤
            function calculateResults() {
                // –ù–∞—Ö–æ–¥–∏–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                const matched = userNumbers.filter(num => drawnNumbers.includes(num));
                const matchedCount = matched.length;
                
                // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Å–æ–≤–ø–∞–≤—à–∏–µ —à–∞—Ä—ã
                document.querySelectorAll('#userBalls .ball').forEach(ball => {
                    if (matched.includes(parseInt(ball.textContent))) {
                        ball.classList.add('matched');
                    }
                });
                
                document.querySelectorAll('#drawnBalls .ball').forEach(ball => {
                    if (matched.includes(parseInt(ball.textContent))) {
                        ball.classList.add('matched');
                    }
                });
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                matchedCountSpan.textContent = matchedCount;
                resultDiv.style.display = 'block';
                
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–∑
                let prize = '';
                switch(matchedCount) {
                    case 5: prize = 'üèÜ –î–ñ–ï–ö–ü–û–¢! 1 000 000 —Ä—É–±–ª–µ–π!'; break;
                    case 4: prize = 'üéâ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! 10 000 —Ä—É–±–ª–µ–π!'; break;
                    case 3: prize = 'üëç –•–æ—Ä–æ—à–æ! 1 000 —Ä—É–±–ª–µ–π!'; break;
                    case 2: prize = 'üçÄ –ù–µ–ø–ª–æ—Ö–æ! 100 —Ä—É–±–ª–µ–π!'; break;
                    default: prize = 'üò¢ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!';
                }
                
                prizeDiv.textContent = prize;
                startBtn.disabled = false;
            }
        });